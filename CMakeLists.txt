# Application specific CMakeLists.txt file
# cmake -DVENDOR=cypress -DBOARD=<board> -DCOMPILER=<tool_chain> -S . -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE=../../../../../../../tools/cmake/toolchains/<tool_chain>.cmake
# ninja -C build

cmake_minimum_required(VERSION 3.13)

# Configure compiler assembler for code outside amazon-freertos source tree
enable_language(C)
enable_language(ASM)

set(afr_app_name "wifi-bluetooth-tester")

set(AFR_PATH "${CMAKE_SOURCE_DIR}../../../..")
# 
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
project(${afr_app_name})

set(AFR_BOARD "${VENDOR}.${BOARD}" CACHE INTERNAL "")
set(AFR_TOOLCHAIN "${COMPILER}" CACHE INTERNAL "")

# Configure include for freertos config files, aws config files, and cypress psoc6_core header files before add_subdirectory

set(BOARD_DEMO_DIR "${AFR_PATH}/vendors/cypress/boards/${BOARD}/aws_demos")
set(BOARD_CY_CODE_DIR "${BOARD_DEMO_DIR}/application_code/cy_code")
set(additional_include_dirs "${BOARD_CY_CODE_DIR};${BOARD_CY_CODE_DIR}/GeneratedSource;${AFR_PATH}/demos/include;${CMAKE_SOURCE_DIR}/config_files")

if (EXISTS "${BOARD_CY_CODE_DIR}/SDIO_HOST")
    list(APPEND additional_include_dirs "${BOARD_CY_CODE_DIR}/SDIO_HOST")
endif()
set(CY_INCLUDE_DIRS ${additional_include_dirs} CACHE INTERNAL "")

# build amazon-freertos as library
set(LIB_MODE 1)

# build amazon-freertos
add_subdirectory(${AFR_PATH} "${CMAKE_SOURCE_DIR}/cmake")

# add executable target source files
add_executable(${afr_app_name} "${CMAKE_SOURCE_DIR}/main.c")

include("${AFR_PATH}/vendors/cypress/MTB/psoc6/cmake/cy_defines.cmake")
include("${AFR_PATH}/vendors/cypress/MTB/psoc6/cmake/cy_create_exe_target.cmake")

# Add board specific files (taken from amazon-freertos/vendors/cypress/boards/${BOARD}/aws_demos/application_code/cy_code).
# Customize as neccessary or replace with another cypress board.
# The code in ${BSP_DIR}/GeneratedSource is generated by our configurators when saving ${BSP_DIR}/design.modus.
cy_find_files(exe_glob_files DIRECTORY "${BOARD_CY_CODE_DIR}")
cy_get_src(exe_source_files ITEMS "${exe_glob_files}")
target_sources(${afr_app_name} PUBLIC "${exe_source_files}")


add_definitions( -DCY_RETARGET_IO_CONVERT_LF_TO_CRLF -DCY_USE_LWIP)

set(CY_APP_LIB_DIR "${AFR_PATH}/vendors/cypress/MTB/libraries/command-console/")

set(CY_TEST_LIB_DIR "${AFR_PATH}/vendors/cypress/MTB/libraries/")

# Add Application Library sources
file(GLOB_RECURSE CY_APP_EXTRA_SOURCES
    "${CY_APP_LIB_DIR}/source/command_console/command_console.c"
    "${CY_APP_LIB_DIR}/source/command_console/COMPONENT_AFR/*.cpp"
    "${CY_APP_LIB_DIR}/source/iperf/compat/*.c"
    "${CY_APP_LIB_DIR}/source/iperf/src/*.c"
    "${CY_APP_LIB_DIR}/source/iperf_utility/*.cpp"
    "${CY_APP_LIB_DIR}/source/iperf/src/*.cpp"
    "${CY_APP_LIB_DIR}/source/iperf/rtos/COMPONENT_AFR/*.c"
    "${CY_APP_LIB_DIR}/source/iperf/rtos/COMPONENT_AFR/*.cpp"
    "${CY_APP_LIB_DIR}/source/bluetooth_utility/COMPONENT_WICED_BLE/*.c"
     "${CY_APP_LIB_DIR}/source/wifi_utility/COMPONENT_AFR/*.c"
    )

target_sources(${afr_app_name} PUBLIC "${CY_APP_EXTRA_SOURCES}" )

# Additional include dirs
target_include_directories(${afr_app_name} PUBLIC
                          "${CY_APP_LIB_DIR}/include"
                          "${CY_APP_LIB_DIR}/source/command_console/COMPONENT_AFR"
                          "${CY_APP_LIB_DIR}/source/iperf/include"
			  "${CY_APP_LIB_DIR}/source/iperf/include/COMPONENT_AFR"
                          "${CY_APP_LIB_DIR}/source/iperf/rtos/COMPONENT_AFR"
                          "${CY_APP_LIB_DIR}/source/iperf_utility"
                          "${CY_APP_LIB_DIR}/source/bluetooth_utility/COMPONENT_WICED_BLE"
                          "${CY_APP_LIB_DIR}/source/wifi_utility/"
                          "${CY_TEST_LIB_DIR}/connectivity-utilities"
                          "${CY_TEST_LIB_DIR}/connectivity-utilities/network"
                          "${CY_TEST_LIB_DIR}/connectivity-utilities/cy_string"
                          "${CY_TEST_LIB_DIR}/bluetooth/wiced_include"
                          "${CY_TEST_LIB_DIR}/connectivity-utilities"
                          )

set(CY_APP_EXTRA_INCLUDE_DIRS "${CY_APP_EXTRA_INCLUDE_DIRS}" "${CY_TEST_LIB_DIR}/command-console/source/command_console")

# add linker script and map file generation
cy_add_linker_options(EXE_APP_NAME ${afr_app_name})

# Set up dependent linked libraries
target_link_libraries(${afr_app_name}  PUBLIC
    AFR::common
    AFR::utils
    AFR::wifi
    AFR::wifi::mcu_port
    psoc6_core # Pulls in defines, includes, source code for psoc6 devices
)
